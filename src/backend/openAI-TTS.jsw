import { fetch } from 'wix-fetch';
import { Buffer } from 'buffer';

const OPENAI_API_KEY = "YOUR_OPENAI_API_KEY";
const GOOGLE_TTS_API_KEY = "YOUR_GOOGLE_TTS_API_KEY";

export function post_processAudio(request) {
    return request.body.json()
        .then(async (body) => {
            const audioData = body.audioData; // Base64-encoded audio
            
            // Step 1: Send to Speech-to-Text API (OpenAI Whisper)
            const transcription = await convertSpeechToText(audioData);
            
            // Step 2: Send text to AI (OpenAI GPT-4 Turbo)
            const aiResponse = await sendToAI(transcription);

            // Step 3: Convert AI Response to Speech (Google TTS)
            const audioUrl = await convertTextToSpeech(aiResponse);

            return { body: JSON.stringify({ audioUrl }) };
        })
        .catch(err => ({ status: 500, body: JSON.stringify({ error: err.message }) }));
}

// Convert Speech to Text (OpenAI Whisper)
async function convertSpeechToText(audioBase64) {
    const audioBuffer = Buffer.from(audioBase64.split(",")[1], 'base64');

    const response = await fetch("https://api.openai.com/v1/audio/transcriptions", {
        method: "POST",
        headers: {
            "Authorization": `Bearer ${OPENAI_API_KEY}`,
            "Content-Type": "application/json"
        },
        body: JSON.stringify({
            model: "whisper-1",
            file: audioBuffer,
            response_format: "text",
            language: "en"
        })
    });

    const data = await response.json();
    return data.text || "Sorry, I couldn't understand.";
}

// Send text to AI for response (OpenAI GPT-4 Turbo)
async function sendToAI(text) {
    const response = await fetch("https://api.openai.com/v1/chat/completions", {
        method: "POST",
        headers: {
            "Authorization": `Bearer ${OPENAI_API_KEY}`,
            "Content-Type": "application/json"
        },
        body: JSON.stringify({
            model: "gpt-4-turbo",
            messages: [{ role: "system", content: "You are a helpful mental health chatbot." }, { role: "user", content: text }],
            max_tokens: 200
        })
    });

    const data = await response.json();
    return data.choices[0].message.content || "I'm here to listen.";
}

// Convert AI Text Response to Speech (Google TTS)
async function convertTextToSpeech(text) {
    try {
        const response = await fetch("https://api.openai.com/v1/audio/speech", {
            method: "POST",
            headers: {
                "Authorization": `Bearer YOUR_OPENAI_API_KEY`, // Replace with your API key
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                model: "tts-1",
                input: text,
                voice: "alloy" // Available voices: alloy, echo, fable, onyx, nova, shimmer
            })
        });

        const data = await response.json();
        return `data:audio/mp3;base64,${data.audio_content}`;
    } catch (error) {
        console.error("TTS Error:", error);
        return null;
    }
    const data = await response.json();
    return `data:audio/mp3;base64,${data.audioContent}`;
}
